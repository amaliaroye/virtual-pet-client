// @import '~bootstrap/scss/bootstrap';
@font-face {
  font-family: 'dogica';
  src: url('public/dogicapixel.ttf') format('truetype');
}
@font-face {
  font-family: 'dogicabold';
  src: url('public/dogicapixelbold.ttf') format('truetype');
  font-weight: bold;
}
@font-face {
  font-family: 'pixelpoiiz';
  src: url('public/pixelpoiiz.ttf') format('truetype');
}

:root {
  --pixel-size: 6;
  box-sizing: border-box;
}

body {
  font-family: dogica;
  margin: 10px;
  border: 10px solid black;
}

h1, h2 {
  font-family: pixelpoiiz;
  border: 5px solid black;
  padding: 5px;
  text-align: center;
  display: block;
  margin-left: auto;
  margin-right: auto;
}

section {
  border: 5px solid black;
  padding: 5px;
  margin: 0 auto;
  display: block;
}

input {
  border: 1px solid black;
  margin: 5px;
  padding: 5px;
  display: block;
  
  &:focus {
    background-color: lightgray;
  }
  &:hover {
    background-color: lightpink;
  }
}

form {
  border: 5px solid black;
  margin: 5px;
  padding: 10px;
  display: inline-block;
}

.pet-options {
  display: inline;
}

.statbar {
  width: 100%;
  background-color: gray;
  border: 1px solid black;
}

.statbar-fill {
  text-align: left;
  padding-top: 10px;
  padding-bottom: 10px;
  background-color: red;
  color: white;
}

.pixelart {
   image-rendering: pixelated;
   image-rendering: crisp-edges;
}

.animal {
  width: calc(32px * var(--pixel-size));
  height: calc(32px * var(--pixel-size));
  overflow: hidden;
  position: relative;
  margin: auto;
}

.spritesheet {
   animation-name: moveSpritesheet;
   animation-duration: 1s;
   animation-iteration-count: infinite;
   animation-timing-function: steps(2);
   width: calc(64px * var(--pixel-size));
   position: absolute;
}

.idle-neutral {
   top: calc(0px * var(--pixel-size));
}
.idle-happy {
   top: calc(-32px * var(--pixel-size));
}
.idle-unhappy {
   top: calc(-64px * var(--pixel-size));
}
.idle-sad {
   top: calc(-96px * var(--pixel-size));
}

@keyframes moveSpritesheet {
  // moves spritesheet relative to itself
  from {
    transform: translate3d(0px, 0, 0);
  }
  to {
    transform: translate3d(-100%, 0, 0);
  }
}
